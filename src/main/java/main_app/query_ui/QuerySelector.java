package main_app.query_ui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 * Simple Frame with a list of saved queries that user can select and load
 */
public class QuerySelector extends JFrame {
    private JList queryList;
    private DefaultListModel listModel;
    private JPanel mainPanel;
    private JButton loadSelectedButton;
    private JButton backButton;
    private JButton deleteSelectedButton;
    private List<String> queryNames;
    private QueryUI queryUI;

    public QuerySelector(List<String> queryNames, QueryUI queryUI) {
        this.queryNames = queryNames;
        this.queryUI = queryUI;
        loadQueryNames();
        this.setPreferredSize(new Dimension(450, 600));
        setContentPane(mainPanel);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setTitle("Query Load selection");
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                QuerySelector.this.dispose();
            }
        });
        loadSelectedButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                selectQuery();
                QuerySelector.this.dispose();
            }
        });
        deleteSelectedButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteQuery();
            }
        });
    }

    private void loadQueryNames() {
        listModel = new DefaultListModel();
        for (String q : queryNames)
            listModel.addElement(q);
        queryList.setModel(listModel);
    }

    private void selectQuery() {
        queryUI.loadSelectedQuery(queryList.getSelectedValue().toString());
    }

    private void deleteQuery() {
        String queryName = queryList.getSelectedValue().toString();
        listModel.remove(queryList.getSelectedIndex());
        queryUI.deleteQuery(queryName);
        queryList.revalidate();
        queryList.updateUI();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        queryList = new JList();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 5.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(queryList, gbc);
        loadSelectedButton = new JButton();
        loadSelectedButton.setText("Load Selected");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 0.5;
        gbc.anchor = GridBagConstraints.EAST;
        mainPanel.add(loadSelectedButton, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 0.5;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(backButton, gbc);
        deleteSelectedButton = new JButton();
        deleteSelectedButton.setText("Delete Selected");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(deleteSelectedButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
